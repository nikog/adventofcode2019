// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Fs = require("fs");
var $$Array = require("bs-platform/lib/js/array.js");
var $$String = require("bs-platform/lib/js/string.js");
var Caml_array = require("bs-platform/lib/js/caml_array.js");
var Day03$Adventofcode2019 = require("./day03.bs.js");

function readInput(param) {
  return Fs.readFileSync(__dirname + "/input", "utf8");
}

function solutionPart1(param) {
  var __x = Fs.readFileSync(__dirname + "/input", "utf8");
  var wires = $$Array.of_list($$String.split_on_char(/* "\n" */10, __x));
  var wiresA = Caml_array.caml_array_get(wires, 0);
  var wiresB = Caml_array.caml_array_get(wires, 1);
  return Day03$Adventofcode2019.Part1.solve(/* tuple */[
              wiresA,
              wiresB
            ]);
}

function solutionPart2(param) {
  var __x = Fs.readFileSync(__dirname + "/input", "utf8");
  var wires = $$Array.of_list($$String.split_on_char(/* "\n" */10, __x));
  var wiresA = Caml_array.caml_array_get(wires, 0);
  var wiresB = Caml_array.caml_array_get(wires, 1);
  return Day03$Adventofcode2019.Part2.solve(/* tuple */[
              wiresA,
              wiresB
            ]);
}

console.log("day03 part1", solutionPart1(/* () */0));

console.log("day03 part2", solutionPart2(/* () */0));

exports.readInput = readInput;
exports.solutionPart1 = solutionPart1;
exports.solutionPart2 = solutionPart2;
/*  Not a pure module */
