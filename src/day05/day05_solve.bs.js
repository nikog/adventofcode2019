// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Fs = require("fs");
var $$Array = require("bs-platform/lib/js/array.js");
var Curry = require("bs-platform/lib/js/curry.js");
var $$String = require("bs-platform/lib/js/string.js");
var Caml_array = require("bs-platform/lib/js/caml_array.js");
var Caml_format = require("bs-platform/lib/js/caml_format.js");
var Day05$Adventofcode2019 = require("./day05.bs.js");

function readInput(param) {
  return Fs.readFileSync(__dirname + "/input", "utf8");
}

function solutionPart1(param) {
  var func = Day05$Adventofcode2019.Part1.make;
  var __x = Fs.readFileSync(__dirname + "/input", "utf8");
  var match = (function (param) {
        return Curry._2(func, param, 1);
      })($$Array.map(Caml_format.caml_int_of_string, $$Array.of_list($$String.split_on_char(/* "," */44, __x))));
  var output = match[1];
  return Caml_array.caml_array_get(output, output.length - 1 | 0);
}

console.log("day05 part1", solutionPart1(/* () */0));

function solutionPart2(param) {
  var func = Day05$Adventofcode2019.Part1.make;
  var __x = Fs.readFileSync(__dirname + "/input", "utf8");
  var match = (function (param) {
        return Curry._2(func, param, 5);
      })($$Array.map(Caml_format.caml_int_of_string, $$Array.of_list($$String.split_on_char(/* "," */44, __x))));
  var output = match[1];
  return Caml_array.caml_array_get(output, output.length - 1 | 0);
}

console.log("day05 part2", solutionPart2(/* () */0));

exports.readInput = readInput;
exports.solutionPart1 = solutionPart1;
exports.solutionPart2 = solutionPart2;
/*  Not a pure module */
